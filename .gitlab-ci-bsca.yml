---
workflow:
  name: "BSCA Trivy Scan for $DOCKER_IMAGE"
  
variables:
  DOCKER_IMAGE: ""
  SBOM_DIR: "sbom"
  PRODUCT_TYPE: "Docker image"


stages:
  - bsca_scan
  - upload

# bSCA - Trivy
.bsca_scan_template:
  stage: bsca_scan
  rules:
    - if: '$DOCKER_IMAGE != ""'

  image: 
    name: docker:latest
    pull_policy: if-not-present
  services:
  - name: docker:dind
    alias: docker
  tags:
    - docker

  before_script:
    - apk add --no-cache curl tar  ##Закоментил для ускорения
    - curl -L https://github.com/aquasecurity/trivy/releases/download/v0.45.1/trivy_0.45.1_Linux-64bit.tar.gz | tar xz -C /usr/local/bin trivy
    - chmod +x /usr/local/bin/trivy
    - echo "$REPO_TOKEN" | docker login -u "$REPO_USER" --password-stdin $REGISTRY
  script:
    - mkdir -p $SBOM_DIR
    - trivy image --format json --output $SBOM_DIR/bsca-sbom.json $DOCKER_IMAGE
  artifacts:
    paths:
      - sbom/bsca-sbom.json
    expire_in: 1 week

.upload_bsca_to_defectdojo_template:
  stage: upload
  image: 
    name: curlimages/curl:latest
    pull_policy: if-not-present
  variables:
    DOCKER_NETWORK_MODE: "host"
  needs: [bsca_scan]
  tags:
    - docker
  script:
    - cat sbom/bsca-sbom.json
    - |
      curl -X POST "${DEFECTDOJO_URL}/api/v2/import-scan/" \
        -H "Authorization: Token ${DEFECTDOJO_TOKEN}" \
        -F 'scan_type=Trivy Scan' \
        -F "file=@sbom/bsca-sbom.json" \
        -F "product_name=$DOCKER_IMAGE" \
        -F "engagement_name=CI Pipeline" \
        -F 'auto_create_context=true' \
        -F "product_type_name=Docker image" \
        -F 'active=true' \
        -F 'verified=true'
  dependencies:
    - bsca_scan
